AWSTemplateFormatVersion: "2010-09-09"

#
# Parameters
#

Parameters:
  RootDomain:
    Type: "String"
    Default: "rustjobs.com"
  WWWDomain:
    Type: "String"
    Default: "www.rustjobs.com"
  CertificateARN:
    Type: "String"
    Default: "arn:aws:acm:us-east-1:185808429192:certificate/65290a24-d6e0-448f-877f-245c3fd0f124"
  ProxySecret:
    Type: "String"

Resources:

  #
  # S3
  #

  RootRedirectS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: "Private"
      BucketName: !Sub "${RootDomain}"
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Sub "${WWWDomain}"
          Protocol: "https"

  RootRedirect3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref RootRedirectS3Bucket
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: "Allow"
            Principal: "*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref RootRedirectS3Bucket
                - "/*"
            Condition:
              StringLike:
                "aws:Referer": !Sub "${ProxySecret}"

  WWWS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: "Private"
      BucketName: !Sub "${WWWDomain}"
      WebsiteConfiguration:
        IndexDocument: "index.html"

  WWWS3BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref WWWS3Bucket
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: "Allow"
            Principal: "*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref WWWS3Bucket
                - "/*"
            Condition:
              StringLike:
                "aws:Referer": !Sub "${ProxySecret}"
          - Action: "s3:ListBucket"
            Effect: "Allow"
            Principal: "*"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref WWWS3Bucket
            Condition:
              StringLike:
                "aws:Referer": !Sub "${ProxySecret}"

  LogsS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: "Private"
      BucketName: !Sub "logs.${RootDomain}"

  #
  # CloudFront
  #

  WWWCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        DefaultRootObject: "index.html"
        Enabled: yes
        HttpVersion: "http2"
        Aliases:
          - !Sub "${WWWDomain}"
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: "/404.html"
        DefaultCacheBehavior:
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
          Compress: true
          TargetOriginId: "WWWS3BucketOriginId"
          ViewerProtocolPolicy: "redirect-to-https"
          AllowedMethods:
            - "GET"
            - "HEAD"
            - "OPTIONS"
          CachedMethods:
            - "GET"
            - "HEAD"
        Logging:
          Bucket: !GetAtt LogsS3Bucket.RegionalDomainName
          IncludeCookies: true
        Origins:
          - Id: "WWWS3BucketOriginId"
            DomainName: !GetAtt WWWS3Bucket.RegionalDomainName
            CustomOriginConfig:
              OriginProtocolPolicy: "http-only"
            OriginCustomHeaders:
              - HeaderName: "referer"
                HeaderValue: !Sub "${ProxySecret}"
        ViewerCertificate:
          AcmCertificateArn: !Sub "${CertificateARN}"
          MinimumProtocolVersion: "TLSv1.2_2018"
          SslSupportMethod: "sni-only"

  RootRedirectCloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Enabled: yes
        HttpVersion: "http2"
        Aliases:
          - !Sub "${RootDomain}"
        DefaultCacheBehavior:
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
          TargetOriginId: "RootRedirectS3BucketOriginId"
          ViewerProtocolPolicy: "redirect-to-https"
          AllowedMethods:
            - "GET"
            - "HEAD"
            - "OPTIONS"
          CachedMethods:
            - "GET"
            - "HEAD"
        Origins:
          - Id: "RootRedirectS3BucketOriginId"
            DomainName: !Sub "${RootDomain}.s3-website-${AWS::Region}.amazonaws.com"
            CustomOriginConfig:
              OriginProtocolPolicy: "http-only"
            OriginCustomHeaders:
              - HeaderName: "referer"
                HeaderValue: !Sub "${ProxySecret}"
        ViewerCertificate:
          AcmCertificateArn: !Sub "${CertificateARN}"
          MinimumProtocolVersion: "TLSv1.2_2018"
          SslSupportMethod: "sni-only"

  #
  # Route 53
  #

  Route53HostedZone:
    Type: "AWS::Route53::HostedZone"
    Properties:
      Name: !Sub "${RootDomain}."

  Route53RecordSetGroup:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: !Ref Route53HostedZone
      RecordSets:
        #
        # ACM verification records
        #

        - Name: !Sub "_e17cbb6a5779684334b4622bef9d48f8.rustjobs.com."
          TTL: 900
          Type: "CNAME"
          ResourceRecords:
            - "_e79d1af99e1bded293aab3de42bdbe0c.xtsdcrbgyf.acm-validations.aws."

        #
        # CloudFront
        #

        - Name: !Sub "${RootDomain}."
          Type: "A"
          AliasTarget:
            DNSName: !GetAtt RootRedirectCloudFrontDistribution.DomainName
            HostedZoneId: "Z2FDTNDATAQYW2"
        - Name: !Sub "${RootDomain}."
          Type: "A"
          Type: "AAAA"
          AliasTarget:
            DNSName: !GetAtt RootRedirectCloudFrontDistribution.DomainName
            HostedZoneId: "Z2FDTNDATAQYW2"
        - Name: !Sub "${WWWDomain}."
          Type: "A"
          AliasTarget:
            DNSName: !GetAtt WWWCloudFrontDistribution.DomainName
            HostedZoneId: "Z2FDTNDATAQYW2"
        - Name: !Sub "${WWWDomain}."
          Type: "AAAA"
          AliasTarget:
            DNSName: !GetAtt WWWCloudFrontDistribution.DomainName
            HostedZoneId: "Z2FDTNDATAQYW2"

        #
        # Email records
        #

        - Name: !Sub "${RootDomain}."
          TTL: 900
          Type: "TXT"
          ResourceRecords:
            - '"hosted-email-verify=x68ctyjl"'
            - '"v=spf1 include:spf.migadu.com -all"'
        - Name: !Sub "${RootDomain}."
          TTL: 900
          Type: "MX"
          ResourceRecords:
            - "10 aspmx1.migadu.com"
            - "20 aspmx2.migadu.com"
        - Name: !Sub "key1._domainkey.${RootDomain}."
          TTL: 900
          Type: "CNAME"
          ResourceRecords:
            - !Sub "key1.${RootDomain}._domainkey.migadu.com"
        - Name: !Sub "key2._domainkey.${RootDomain}."
          TTL: 900
          Type: "CNAME"
          ResourceRecords:
            - !Sub "key2.${RootDomain}._domainkey.migadu.com"
        - Name: !Sub "key3._domainkey.${RootDomain}."
          TTL: 900
          Type: "CNAME"
          ResourceRecords:
            - !Sub "key3.${RootDomain}._domainkey.migadu.com"
        - Name: !Sub "_dmarc.${RootDomain}."
          TTL: 900
          Type: "TXT"
          ResourceRecords:
            - '"v=DMARC1; p=quarantine;"'
